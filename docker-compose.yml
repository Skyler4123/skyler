version: "3.8"
services:
  web:
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/web
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - mongodb
      - redis
  # backgroundjob:
  #   build: .
  #   command: bash -c "rm -f tmp/pids/server.pid && bundle exec sidekiq"
  #   volumes:
  #     - .:/skyler
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - postgres
  #     - mongodb
  #     - redis
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    # timescaledb:
    #   container_name: timescaledb
    #   image: timescale/timescaledb:latest-pg15
    #   restart: always
    #   environment:
    #     POSTGRES_DB: skyler_development
    #     POSTGRES_USER: skyler
    #     POSTGRES_PASSWORD: password
    #   ports:
    #     - "5433:5433"
    #   volumes:
    #     - db:/var/lib/timescaledb/data
    # elasticsearch:
    #   container_name: elasticsearch
    #   image: elasticsearch:8.7.1
    #   restart: always
    #   ports:
    #     - "9200:9200"
    #   volumes:
    #     - db:/var/lib/elasticsearch/data
  mongodb:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - db:/var/lib/mongodb/data
  redis:
    image: redis
    # restart: always
    ports:
      - 6379:6379
    volumes:
      - cache:/data
    # zookeeper:
    #   image: wurstmeister/zookeeper
    #   container_name: zookeeper
    #   ports:
    #     - "2181:2181"
    # kafka:
    #   image: wurstmeister/kafka
    #   container_name: kafka
    #   ports:
    #     - "9092:9092"
    #   environment:
    #     KAFKA_ADVERTISED_HOST_NAME: localhost
    #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
volumes:
  cache:
    driver: local
  db:
    driver: local
